/* ------------------------------------------------------------------------- *\
 * @mixin center
 *
 * This mixin takes three parameters:
 *
 *   1st: $horizontal for horizontal alignment. Defaults to: center
 *    Choose between: center, left or right
 *
 *   2nd: $vertical for vertical alignment. Defaults to: center
 *    Choose between: center, top or bottom
 *
 *   3rd: $position for the position value of the element. Defaults to: absolute
 *
 * Description:
 *   The center mixin is used to position elements:
 *	 - in the vertical center, top or bottom, 
 *	 - the horizontal center, left or right,
 *	 - in the center of both,
 *
 * Usage:
 *   @include center(); // No parameters if you want to use the already defined ones
 *   @include center(bottom, center, relative); // With parameters if you want to override the already defined ones
/* ------------------------------------------------------------------------- */

@mixin center($horizontal: center, $vertical: center, $position: absolute) {
	position: $position;

	@if $horizontal == center and $vertical == center {
		left: 50%;
		top: 50%;
		transform: translate(-50%, -50%);
	} @else {
		@if ($horizontal == center) {
			left: 50%;
			transform: translateX(-50%);
		} @else if ($horizontal == left) {
			left: 0;
		} @else if ($horizontal == right) {
			right: 0;
		} @else {
			@error "@mixin center expected: 'center', 'left' or 'right'. got '#{$horizontal}'";
		}
	
		@if ($vertical == center) {
			top: 50%;
			transform: translateY(-50%);
		} @else if ($vertical == top) {
			top: 0;
		} @else if ($vertical == bottom) {
			bottom: 0;
		} @else {
			@error "@mixin center expected: 'center', 'top' or 'bottom'. got '#{$vertical}'";
		}
	}
}
/* ------------------------------------------------------------------------- *\
 * @mixin make-dynamic-styling
 *
 * This mixin takes two parameters:
 *
 *   @param { $screen } takes the $tablet or $base variable
 *   @param { $map } takes a map of variable
 *
 *   @return { $propertie: $value }   
 *
 * Description:
 *   The make-dynamic-styling mixin makes all the basic styling for element in the typography variable in 'variables/typography/_font-sizes.scss'
 *   If the parameter is $tablet the styling comes in a min-width mediaquerie with the pixel value based on the $tablet-width variable.
 *
 * Usage:
 *   @include make-dynamic-styling($tablet);
/* ------------------------------------------------------------------------- */

@mixin make-dynamic-styling($screen, $map){
    @if $map {
        @each $property, $variable in $map {
            $properties: map-keys($variable);
        
            #{$property}, .#{$property} {
        
                @each $prop, $value in $properties {
        
                    $prop-values: map-get($variable, $prop);
                    $values: map-get($prop-values, $screen);
        
                    #{$prop}: #{$values};
    
                }
            }
        }
    } @else {
        @warn "map: '#{$map}' is undefined";
    }
}
/* ------------------------------------------------------------------------- *\
 * @mixin make-dynamic-styling
 *
 * This mixin takes two parameters:
 *
 *   @param { $screen } takes the $tablet or $base variable
 *   @param { $map } takes a map of variable
 *
 *   @return { $propertie: $value }   
 *
 * Description:
 *   The make-dynamic-styling mixin makes all the basic styling for element in the typography variable in 'variables/typography/_font-sizes.scss'
 *   If the parameter is $tablet the styling comes in a min-width mediaquerie with the pixel value based on the $tablet-width variable.
 *
 * Usage:
 *   @include make-dynamic-styling($tablet);
/* ------------------------------------------------------------------------- */

@mixin make-dynamic-styling($map){

    @each $property, $variable in $map {
        $properties: map-keys($variable);
        $screen-size: get-size($properties, $variable); // only check first prop in el
  
        @each $size in $screen-size {      

            @if $size == $base {
                @include map-over($size, $variable, $property);
            } @else if $size == $tablet {
                @include tablet {
                    @include map-over($size, $variable, $property);
                }
            } @else if $size == $desktop {
                @include desktop {
                    @include map-over($size, $variable, $property);
                }
            } @else {
                @warn "value doesn't exist and/or isn't added te the make-dynamic-styling mixin";
            }
        }
    }
}

/*
 *  map-over takes 3 parameters
 *
 *  @param { $screen } screen format
 *  @param { $map } array for looping
 *  @param { $property } element that needs to be styled
 *
 *  @return: styled class
 *
*/
@mixin map-over($screen, $map, $property){

    $properties: map-keys($map);

    #{$property}, .#{$property} {
        
        @each $prop in $properties {
            
            $prop-values: map-get($map, $prop);
            $values: map-get($prop-values, $screen);
        
            #{$prop}: #{$values};
        }
    }
}

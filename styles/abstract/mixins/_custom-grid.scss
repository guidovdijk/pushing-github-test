/*
 * Generates classes for a grid of columns, prefixed by size.
 * The result will be .col-[size]-[col] E.g. .col-xs-6
 *
 * @param { string }	$size			The name of the size target (e.g. xs, sm, md)
 * @param { int }		$grid-columns	Amount of columns
*/
@mixin grid-generator($size, $grid-columns) {
	@for $i from 1 through $grid-columns {
        .col-#{$size}-#{$i} {
            width: percentage($i / $grid-columns);
            float: left;
        }
	}
}

/*
 * The custom-grid mixin is used for initializing the grid-generator mixin and
 * To check if the $use-grid-type in the _grid-type.scss file is equal to custom.
 * If it is it gets imported in the css.
 *
 * You can change this file to your own custom grid if needed.
*/
@mixin custom-grid($type) {
    @if $type == $custom {
        @debug 'Custom grid in use.';
        @include grid-generator(xs, 12); // Base
        @include tablet-up {
            @include grid-generator(sm, 12); // Tablet
        }
        @include desktop-up {
            @include grid-generator(md, 12); // Desktop
        }        
    } 
}
